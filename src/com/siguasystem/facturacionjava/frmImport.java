/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.siguasystem.facturacionjava;

import com.siguasystem.modelo.Cliente;
import com.siguasystem.modelo.ClienteJpaController;
import com.siguasystem.modelo.Producto;
import com.siguasystem.modelo.ProductoJpaController;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import modeloold.Clientes;
import modeloold.ClientesJpaController;
import modeloold.Productoold;
import modeloold.ProductooldJpaController;

/**
 *
 * @author jramos
 */
public class frmImport extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmImport
     */
    //Conexion JPA
    EntityManagerFactory emFac = Persistence.createEntityManagerFactory("Restorant");
    //Conexion JPA
    EntityManagerFactory emold = Persistence.createEntityManagerFactory("sisold");
    ClientesJpaController jclold = new ClientesJpaController(emold);
    ClienteJpaController jcli = new ClienteJpaController(emFac);
    //Productos
    ProductooldJpaController jprold = new ProductooldJpaController(emold);
    ProductoJpaController jpro = new ProductoJpaController(emFac);

    public frmImport() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btncliente = new javax.swing.JButton();
        btnimportpro = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);

        btncliente.setText("Importar Clientes");
        btncliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclienteActionPerformed(evt);
            }
        });

        btnimportpro.setText("Importar Productos");
        btnimportpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimportproActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btncliente, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnimportpro, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(593, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnimportpro, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(btncliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(446, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclienteActionPerformed
        // TODO add your handling code here:
        List<Clientes> cliold = new ArrayList<Clientes>();
        List<Cliente> clinew = new ArrayList<Cliente>();
        try {
            cliold = jclold.findClientesEntities();
            JOptionPane.showMessageDialog(rootPane, "Listado de clientes listo para importarse!", "Listo", JOptionPane.INFORMATION_MESSAGE);
            for (Iterator<Clientes> iterator = cliold.iterator(); iterator.hasNext();) {
                Clientes c = iterator.next();
                Cliente c1 = new Cliente(c.getCodcli(), 1);
                c1.setNombre(c.getNomcli());
                c1.setDireccion(c.getDircli());
                //clinew.add(c1);
                try {
                    jcli.create(c1);
                } catch (Exception e) {
                }
            }
            ///jcli.createb(clinew);
        } catch (Exception e) {
            System.out.println("" + e.getMessage());
        }
    }//GEN-LAST:event_btnclienteActionPerformed

    private void btnimportproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimportproActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        List<Productoold> pold = new ArrayList<Productoold>();
        List<Producto> pnew = new ArrayList<Producto>();
        try {
            pold = jprold.findProductoEntities();
            JOptionPane.showMessageDialog(null, "Listado de Productos listo para importarse!", "Listo", JOptionPane.INFORMATION_MESSAGE);
            for (Iterator<Productoold> iterator = pold.iterator(); iterator.hasNext();) {
                Productoold p = iterator.next();
                Producto p1 = new Producto(p.getIdProducto());
                if (p.getCategoria().equals("1")) {
                    p1.setCategoria("2");
                } else {
                    p1.setCategoria("1");
                }
                p1.setNombre(p.getNombre());
                p1.setDescripcion(p.getNombre());
                if (p.getPrecio()==null) {
                    p.setPrecio(0.0);
                }
                if (p.getPrecio() <= 0) {
                    p1.setImpuesto(BigDecimal.valueOf(0.0));
                } else {
                    p1.setImpuesto(BigDecimal.valueOf(0.15));
                }
                p1.setPrecio(p.getPrecio());
                try {
                    jpro.create(p1);
                } catch (Exception e) {
                }
            }
        } catch (Exception e) {
            System.out.println("" + e.getMessage());
        }
    }//GEN-LAST:event_btnimportproActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncliente;
    private javax.swing.JButton btnimportpro;
    // End of variables declaration//GEN-END:variables
}
