/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.siguasystem.facturacionjava;

import com.siguasystem.modelo.Categoriaproducto;
import com.siguasystem.modelo.CategoriaproductoJpaController;
import com.siguasystem.modelo.Historicaproductos;
import com.siguasystem.modelo.HistoricaproductosJpaController;
import com.siguasystem.modelo.HistoricaproductosPK;
import com.siguasystem.modelo.Impuestos;
import com.siguasystem.modelo.ImpuestosJpaController;
import com.siguasystem.modelo.Producto;
import com.siguasystem.modelo.ProductoJpaController;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.JTextComponent;
import modeloold.Productoold;
import modeloold.ProductooldJpaController;

/**
 *
 * @author juan
 */
public class panelDetV3 extends javax.swing.JPanel {

    /**
     * Creates new form panelDet
     */
    EntityManagerFactory emFac = Persistence.createEntityManagerFactory("Restorant");
    EntityManagerFactory emFacold = Persistence.createEntityManagerFactory("sisold");
    public Integer addpro = 0;
    public articulo producto = new articulo();
    private ProductoJpaController finpro = new ProductoJpaController(emFac);//(Persistence.createEntityManagerFactory("Restorant"));
    private ProductooldJpaController finproold = new ProductooldJpaController(emFacold);
    private ImpuestosJpaController fisv = new ImpuestosJpaController(emFac);
    private CategoriaproductoJpaController fcatpro = new CategoriaproductoJpaController(emFac);
    private HistoricaproductosJpaController hpro = new HistoricaproductosJpaController(emFac);
    public Producto pselec;
    private BigDecimal subtot;
    private Tablabuscaprofac bp = new Tablabuscaprofac();
    String factual = DateFormat.getDateInstance().format(new Date()).toString();
    DateFormat formatfac = new SimpleDateFormat("dd/MM/yyyy", Locale.US);//);
    Productoold pold;
    FileReader fr = null;
    public String[] conexion_data = new String[4];

    public panelDetV3() {
        initComponents();
        listado.setModel(bp.crearTabla());
        tamanioCol();
        btncancel.setVisible(false);
        btnadd.setVisible(true);
        chkSrvold.setVisible(true);
        /* txtidpro.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char keyChar = e.getKeyChar();
                if (Character.isLowerCase(keyChar)) {
                    e.setKeyChar(Character.toUpperCase(keyChar));
                }
            }
        });
         */
        cboisv.setModel(ObtenerListaisv());
        cbocat.setModel(ObtenerListacat());
        //btnadd.setVisible(false);
    }

    public void tamanioCol() {
        listado.getColumnModel().getColumn(0).setPreferredWidth(10);
        listado.getColumnModel().getColumn(1).setPreferredWidth(50);
        listado.getColumnModel().getColumn(2).setPreferredWidth(250);
        listado.getColumnModel().getColumn(3).setPreferredWidth(50);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtnompro = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtprecio = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        txtisv = new javax.swing.JSpinner();
        btnadd = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();
        btnNewpro = new javax.swing.JButton();
        txtidpro = new javax.swing.JTextField();
        cboisv = new javax.swing.JComboBox<>();
        cbocat = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnactpro = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtexistencia = new javax.swing.JSpinner();
        chkSrvold = new javax.swing.JCheckBox();
        btndel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listado = new javax.swing.JTable();

        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Codigo del Producto:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Nombre/Descripcion:");

        txtnompro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtnompro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnomproKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Precio Venta:");

        txtprecio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtprecio.setModel(new javax.swing.SpinnerNumberModel(0.0f, null, null, 1.0f));
        txtprecio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtprecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtprecioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtprecioKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Isv:");

        txtisv.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtisv.setEnabled(false);

        btnadd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnadd.setText("Buscar");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btncancel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btncancel.setText("Cancelar");
        btncancel.setEnabled(false);
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        btnNewpro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNewpro.setText("Crear ");
        btnNewpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewproActionPerformed(evt);
            }
        });

        txtidpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidproActionPerformed(evt);
            }
        });
        txtidpro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidproKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtidproKeyReleased(evt);
            }
        });

        cboisv.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cboisv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboisv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboisvActionPerformed(evt);
            }
        });

        cbocat.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cbocat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Existencia:");

        btnactpro.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnactpro.setText("Actualizar");
        btnactpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactproActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 51));
        jLabel5.setText("*Para buscar escriba el nombre o codigo y presiona enter para buscar.");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Categoria:");

        txtexistencia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtexistencia.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        chkSrvold.setText("Buscar ");
        chkSrvold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSrvoldActionPerformed(evt);
            }
        });

        btndel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btndel.setText("Borrar");
        btndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtisv, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboisv, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtprecio))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtexistencia))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbocat, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtnompro, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtidpro)
                                .addGap(207, 207, 207)))
                        .addGap(4, 4, 4)
                        .addComponent(btnNewpro, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnactpro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btndel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btncancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(chkSrvold)
                                    .addGap(237, 237, 237))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(chkSrvold))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btndel, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(txtidpro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewpro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnactpro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtnompro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbocat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtexistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtisv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cboisv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );

        listado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        listado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listado);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1129, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 361, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(174, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        if (chkSrvold.isSelected()) {
            actualizarURLbdold();
        }
        
        ProductoFilcod();
        System.out.println("Producto encontrado");
        producto.setCodigo(pselec.getIdProducto());
        producto.setNombre(txtnompro.getText());
        producto.setIsv(true);
        producto.setPrecio(BigDecimal.valueOf(Double.parseDouble(txtprecio.getValue().toString())));
        producto.setValisv(Double.parseDouble(txtisv.getValue().toString()));
        producto.setEstado("0");
        cerrarDialogo();
    }//GEN-LAST:event_btnaddActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        cerrarDialogo();
    }//GEN-LAST:event_btncancelActionPerformed

    private void btnNewproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewproActionPerformed
        // TODO add your handling code here:
        if (1 == 0) {
            JOptionPane.showMessageDialog(this, "No tiene permisos para crear Productos!", "Productos", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (txtidpro.getText().length() > 0) {
            if (txtisv.getValue().toString().isEmpty()) {
                 JOptionPane.showMessageDialog(this, "Seleccione un impuesto para el producto.", "Impuesto", JOptionPane.INFORMATION_MESSAGE);
                 return;
            }
            try {
                finpro.create(setvaloresPro());
                regHistopro("ingreso");
                JOptionPane.showMessageDialog(this, "Producto Agregado Correctamente!", "Productos", JOptionPane.INFORMATION_MESSAGE);
                //txtidpro.setText("");
                txtnompro.setText("");
                txtprecio.setValue(0);
                if (txtidpro.getText().length() > 0) {
                    ProductoFilike();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error->" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(panelDetV3.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnNewproActionPerformed

    public void regHistopro(String t) throws NumberFormatException, Exception {
        Historicaproductos hp = new Historicaproductos();
        //hp.setHistoricaproductosPK(new HistoricaproductosPK(new Date(), txtidpro.getText()));
        hp.setFecha(new Date());
        hp.setProducto(txtidpro.getText());
        Integer eactual = finpro.findProducto(txtidpro.getText()).getCantidadexis();
        Integer nex = 0;
        if (t.equals("salida")) {
            nex = -Integer.parseInt(txtexistencia.getValue().toString());
        } else if (t.equals("ingreso")) {
            nex = Integer.parseInt(txtexistencia.getValue().toString());
        }
        hp.setTipo(t);
        hp.setEstado((short) 1);
        hp.setCantidad(nex.toString());
        hpro.create(hp);
    }

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void txtprecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprecioKeyReleased

    }//GEN-LAST:event_txtprecioKeyReleased

    private void txtprecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprecioKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtprecioKeyPressed

    private void listadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadoMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1 && !evt.isConsumed()) {
            addpro = 1;
            String pselstring = listado.getModel().getValueAt(listado.getSelectedRow(), 1).toString();
            pselec = finpro.findProducto(pselstring);
            txtidpro.setText(pselec.getIdProducto());
            txtnompro.setText(pselec.getNombre());
            txtprecio.setValue(pselec.getPrecio());
            txtisv.setValue(pselec.getImpuesto());
            setSelectedValueIsv(cboisv, pselec.getImpuesto().toString());
            setSelectedValueCat(cbocat, pselec.getCategoria());
            producto.setCodigo(pselec.getIdProducto());
            producto.setNombre(pselec.getNombre());
            producto.setCantidad(1);
            producto.setPrecio(BigDecimal.valueOf(pselec.getPrecio().doubleValue()));
            producto.setIsv(true);
        } else if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            if (listado.getRowCount() > 0) {
                addpro = 1;
                String pselstring = listado.getModel().getValueAt(listado.getSelectedRow(), 1).toString();
                pselec = finpro.findProducto(pselstring);
                txtidpro.setText(pselec.getIdProducto());
                txtnompro.setText(pselec.getNombre());
                txtprecio.setValue(pselec.getPrecio());
                producto.setCodigo(pselec.getIdProducto());
                producto.setNombre(pselec.getNombre());
                producto.setCantidad(1);
                producto.setPrecio(BigDecimal.valueOf(pselec.getPrecio().doubleValue()));
                producto.setIsv(true);
                cerrarDialogo();
            }
        }
    }//GEN-LAST:event_listadoMouseClicked

    public void setSelectedValueCat(JComboBox comboBox, String value) {
        Categoriaproducto item;
        for (int i = 0; i < comboBox.getItemCount(); i++) {
            if (i > 0) {
                item = (Categoriaproducto) comboBox.getItemAt(i);
                if (item.getIdCategoria().equalsIgnoreCase(value)) {
                    comboBox.setSelectedIndex(i);
                    break;
                }
            }
        }
    }
    
    public void setSelectedValueIsv(JComboBox comboBox, String value) {
        Impuestos item;
        for (int i = 0; i < comboBox.getItemCount(); i++) {
            if (i > 0) {
                item = (Impuestos) comboBox.getItemAt(i);
                if (item.getImpuesto().doubleValue()==Double.parseDouble(value)) {
                    comboBox.setSelectedIndex(i);
                    break;
                }
            }
        }
    }

    private void txtidproKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidproKeyReleased
        // TODO add your handling code here:
        if (txtidpro.getText() != null) {
            if (txtidpro.getText().length() > 0) {
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    if (chkSrvold.isSelected()) {
                        ProductoFilcod();
                    } else {
                        ProductoFilike();
                    }
                }
            }
        }
    }//GEN-LAST:event_txtidproKeyReleased

    private void txtidproKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidproKeyPressed
        // TODO add your handling code here:
       /* char keyChar = evt.getKeyChar();
        if (Character.isLowerCase(keyChar)) {
            evt.setKeyChar(Character.toUpperCase(keyChar));
        }*/
    }//GEN-LAST:event_txtidproKeyPressed

    public Producto setvaloresPro() {
        Producto p = new Producto();
        p.setIdProducto(txtidpro.getText().toLowerCase());
        p.setNombre(txtnompro.getText());
        p.setPrecio(Double.parseDouble(txtprecio.getValue().toString()));
        p.setCantidadexis(Integer.parseInt(txtexistencia.getValue().toString()));
        p.setImpuesto(((Impuestos) cboisv.getSelectedItem()).getImpuesto());//igDecimal.valueOf(Double.parseDouble(txtisv.getValue().toString())));//
        p.setCategoria(((Categoriaproducto) cbocat.getSelectedItem()).getIdCategoria());
        return p;
    }


    private void btnactproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactproActionPerformed
        // TODO add your handling code here:
        if (1 == Global.admin){
        if (txtidpro.getText().length() > 0) {
            try {
                if (chkSrvold.isSelected()) {
                    actualizarURLbdold();
                    //Productoold pold=new Productoold();
                    pold.setNombre(txtnompro.getText());
                    pold.setPrecio(Double.parseDouble(txtprecio.getValue().toString()));
                    finproold.edit(pold);
                } else {
                    finpro.edit(setvaloresPro());
                }
                JOptionPane.showMessageDialog(this, "Producto Actualizado Correctamente!", "Productos", JOptionPane.INFORMATION_MESSAGE);
                //txtidpro.setText("");
                txtnompro.setText("");
                txtprecio.setValue(0);
                if (txtidpro.getText().length() > 0) {
                    ProductoFilike();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error->" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(panelDetV3.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
        else{
            JOptionPane.showMessageDialog(this, "No tiene permisos para Actualizar Productos!", "Productos", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
    }//GEN-LAST:event_btnactproActionPerformed

    public void actualizarURLbdold(){
    /* try {
                    fr = new FileReader("conexion.dat");
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(frmFacturaORM.class.getName()).log(Level.SEVERE, null, ex);
                }
                BufferedReader br = new BufferedReader(fr);
                String linea = "";
                int number = 0;
                try {
                    while ((linea = br.readLine()) != null) {
                        conexion_data[number] = linea.substring(linea.indexOf("=") + 1, linea.length());
                        number++;
                        if (number > 3) {
                            break;
                        }
                    }
                } catch (IOException ex) {
                    Logger.getLogger(EjecutarReporte.class.getName()).log(Level.SEVERE, null, ex);
                }
                   Map<String, Object> propertiesMap = propertiesMap = emFacold.getProperties();
                    for (Map.Entry<String, Object> e : propertiesMap.entrySet()) {
                        if (e.getKey().equals("javax.persistence.jdbc.url")) {
                            e.setValue(conexion_data[3]);
                        }
                        if (e.getKey().equals("javax.persistence.jdbc.user")) {
                            e.setValue("root");
                        }
                        if (e.getKey().equals("javax.persistence.jdbc.password")) {
                             e.setValue(" ");
                        }
                    }*/
    }
    
    private void txtnomproKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomproKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtnomproKeyReleased

    private void txtidproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidproActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidproActionPerformed

    private void btndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelActionPerformed
        // TODO add your handling code here:
           if (1 == Global.admin) {
                try {
                    if (txtidpro.getText().length()>0) {
                         finpro.destroy(txtidpro.getText());
                    }

                } catch (Exception e) {
                     JOptionPane.showMessageDialog(null, "Error "+e.getMessage());
                }
           }else{
                JOptionPane.showMessageDialog(null, "No tiene Permisos! ");
           }
       
    }//GEN-LAST:event_btndelActionPerformed

    private void cboisvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboisvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboisvActionPerformed

    private void chkSrvoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSrvoldActionPerformed
        // TODO add your handling code here:
        if (chkSrvold.isSelected()) {
            
        }
    }//GEN-LAST:event_chkSrvoldActionPerformed

    public DefaultComboBoxModel ObtenerListapro(String cadena) {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        try {
            Query qsql = finpro.getEntityManager().createNativeQuery("select * from producto c where LOWER(c.nombre) LIKE lower(\'%" + cadena.trim() + "%\') or  LOWER(c.idproducto) LIKE lower(\'%" + cadena.trim() + "%\')", Producto.class);
            List<Producto> flp = qsql.getResultList();
            modelo.addElement("");
            for (Producto it : flp) {
                Producto p = it;
                modelo.addElement(p);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error "+ex.getMessage());
            System.out.println("Coneccion incorrecta: " + ex);
        }
        return modelo;
    }

    public DefaultComboBoxModel ObtenerLista(String cadena) {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        try {
            for (Producto it : finpro.findProductoEntities()) {
                Producto p = it;
                modelo.addElement(p);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error ");
            System.out.println("Coneccion incorrecta: " + ex);
        }
        return modelo;
    }

    public DefaultComboBoxModel ObtenerListaisv() {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        try {
            Query qsql = finpro.getEntityManager().createNativeQuery("select * from impuestos c", Impuestos.class);
            List<Impuestos> flp = qsql.getResultList();
            modelo.addElement("");
            for (Impuestos it : flp) {
                Impuestos p = it;
                modelo.addElement(p);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error ");
            System.out.println("Coneccion incorrecta: " + ex);
        }
        return modelo;
    }

    public DefaultComboBoxModel ObtenerListacat() {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        try {
            Query qsql = finpro.getEntityManager().createNativeQuery("select * from categoriaproducto c", Categoriaproducto.class);
            List<Categoriaproducto> flp = qsql.getResultList();
            modelo.addElement("");
            for (Categoriaproducto it : flp) {
                Categoriaproducto p = it;
                modelo.addElement(p);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error ");
            System.out.println("Coneccion incorrecta: " + ex);
        }
        return modelo;
    }

    public void cerrarDialogo() {
        if (emFac.isOpen()) {
            emFac.close();
        }
        JDialog parent = (JDialog) this.getTopLevelAncestor();
        parent.dispose();
    }

    public void cerrarDialogo2() {
        // TODO add your handling code here:
        JDialog jd = (JDialog) this.getRootPane().getParent();
        System.out.println("Salio de la busqueda de Productos");
        jd.dispose();
    }

    private void ProductoFilcod() {
        DefaultTableModel df = bp.crearTabla();
        Productoold lpro = new Productoold();
        try {
            String pt = txtidpro.getText().toLowerCase();
            Query qsql = finproold.getEntityManager().createNativeQuery("select * from producto where Lower(codpro)=?", Productoold.class)
                    .setParameter(1, pt);//qsql.setParameter("n", txtnom.getText());
                lpro = (Productoold) qsql.getSingleResult();
            pold = lpro;
            txtnompro.setText(pold.getNombre());
            txtprecio.setValue(pold.getPrecio());
            tamanioCol();
        } catch (Exception e) {
        System.out.println("Error->"+e.getMessage());
        }
    }

    private void ProductoFilike() {
        DefaultTableModel df = bp.crearTabla();
        List<Producto> lpro = new ArrayList<Producto>();
        try {
            String pt = "%" + txtidpro.getText().toLowerCase()+ "%";
            Query qsql = finpro.getEntityManager().createNativeQuery("select * from producto c where Lower(c.nombre) LIKE Lower(?) or  Lower(c.idproducto) LIKE Lower(?) limit 0,100", Producto.class)
                    .setParameter(1, pt).setParameter(2, pt);//qsql.setParameter("n", txtnom.getText());
            lpro = qsql.getResultList();
            int i = 1;
            for (Iterator<Producto> iterator = lpro.iterator(); iterator.hasNext();) {
                Producto p = iterator.next();
                NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("es", "es_HN"));
                String precio = formatter.format(p.getPrecio());
                df.addRow(new Object[]{i++, p.getIdProducto(), p.getNombre(), p.getPrecio(), p.getCategoria(), p.getImpuesto()});
            }
            listado.setModel(df);
            tamanioCol();
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewpro;
    private javax.swing.JButton btnactpro;
    private javax.swing.JButton btnadd;
    public javax.swing.JButton btncancel;
    private javax.swing.JButton btndel;
    private javax.swing.JComboBox<String> cbocat;
    private javax.swing.JComboBox<String> cboisv;
    private javax.swing.JCheckBox chkSrvold;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listado;
    private javax.swing.JSpinner txtexistencia;
    private javax.swing.JTextField txtidpro;
    private javax.swing.JSpinner txtisv;
    private javax.swing.JTextField txtnompro;
    private javax.swing.JSpinner txtprecio;
    // End of variables declaration//GEN-END:variables

}
